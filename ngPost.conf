# ngPost configuration file
#
#

## Lang for the app. Currently supported: EN, FR, ES, DE
lang = EN

## destination folder for all your nzb
## if you don't put anything, the nzb will be generated in the folder of ngPost on Windows and in /tmp on Linux
## this will be overwritten if you use the option -o with the full path of the nzb
nzbPath  = /tmp
#nzbPath  = C:\ngPost\tmp

## upload the nzb to a specific URL
## only http, https or ftp (neither ftps or sftp are supported)
#NZB_UPLOAD_URL = ftp://user:pass@url_or_ip:21

## Shutdown command to switch off the computer when ngPost is done with all its queued posting
## this should mainly used with the auto posting
## you could use whatever script instead (like to send a mail...)
#SHUTDOWN_CMD = shutdown /s /f /t 0  (Windows)
#SHUTDOWN_CMD = sudo -n /sbin/poweroff  (Linux, make sure poweroff has sudo rights without any password or change the command)
#SHUTDOWN_CMD = sudo -n shutdown -h now (MacOS, same make sure you've sudo rights)

## nzb files are normally all created in nzbPath
## but using this option, the nzb of each monitoring folder will be stored in their own folder (created in nzbPath)
#MONITOR_NZB_FOLDERS = true

## for monitoring, extension file filter for new incoming files (coma separated, no dot)
#MONITOR_EXTENSIONS = mkv,mp4,avi,zip,tar,gz,iso

## for monitoring, ignore new incoming folders
#MONITOR_IGNORE_DIR = true


## Default folder to open to select files from the HMI
inputDir = /tmp

## History posting file
## each succesful post will append a line with the date, the file name, the archive name, the password...
POST_HISTORY = /nzb/ngPost_history.csv

GROUPS   = alt.binaries.test,alt.binaries.misc


## uncomment the next line if you want a fixed uploader email (in the nzb and in the header of each articles)
## if you let it commented, we'll generate ONE random email for all the posts of the session
#FROM     = someone@ngPost.com

## Generate new random poster for each post (--auto or --monitor)
## if this option is set the FROM email just above will be ignored
#GEN_FROM = true


## uncomment the next line to limit the number of threads,  (by default it'll use the number of cores)
## all the connections are spread equally on those posting threads
#thread  =  1


## How to display progress in command line: NONE, BAR, FILES
DISP_PROGRESS = BAR
#DISP_PROGRESS = FILES


## suffix of the msg_id for all the articles (cf nzb file)
#msg_id  =  ngPost

## article size (default 700k)
article_size = 716800

## number of retry to post an Article in case of failure (probably due to an already existing msg-id)
retry = 5


## uncomment the following line to obfuscate the subjects of each Article
## /!\ CAREFUL you won't find your post if you lose the nzb file /!\
#obfuscate = article

## remove accents and special characters from the nzb file names
NZB_RM_ACCENTS = true




##############################################################
##           Compression and par2 section                   ##
##############################################################

## temporary folder where the compressed files and par2 will be stored
## so we can post directly a compressed (obfuscated or not) archive of the selected files
## /!\ The directory MUST HAVE WRITE PERMISSION /!\
## this is set for Linux environment, Windows users MUST change it
TMP_DIR = /tmp
#TMP_DIR = C:\ngPost\tmp

## RAR absolute file path (external application)
## /!\ The file MUST EXIST and BE EXECUTABLE /!\
## this is set for Linux environment, Windows users MUST change it
RAR_PATH = /usr/bin/rar
#RAR_PATH = C:\Program Files\WinRAR\Rar.exe
#RAR_PATH = /usr/bin/7z
#RAR_PATH = C:\Program Files\7-Zip\7z.exe


## RAR EXTRA options (the first 'a' and '-idp' will be added automatically)
## -hp will be added if you use a password with --gen_pass, --rar_pass or using the HMI
## -v42m will be added with --rar_size or using the HMI
## you could change the compression level, lock the archive, add redundancy...
#RAR_EXTRA = -ep1 -m0 -k -rr5p
#RAR_EXTRA = -mx0 -mhe=on   (for 7-zip)

## size in MB of the RAR volumes (0 by default meaning NO split)
## feel free to change the value or to comment the next line if you don't want to split the archive
RAR_SIZE = 42

## maximum number of archive volumes
## we'll use RAR_SIZE except if it genereates too many volumes
## in that case we'll update rar_size to be <size of post> / rar_max
RAR_MAX = 99

## keep rar folder after posting (otherwise it is automatically deleted uppon successful post)
#KEEP_RAR = true

## par2 redundancy percentage (0 by default meaning NO par2 generation)
PAR2_PCT = 8

## par2 (or alternative) absolute file path
## this is only useful if you compile from source (as par2 is included on Windows and the AppImage)
## or if you wish to use an alternative to par2 (for exemple Multipar on Windows)
## (in that case, you may need to set also PAR2_ARGS)
#PAR2_PATH = /usr/local/bin/parpar
#PAR2_PATH = /usr/bin/par2
#PAR2_PATH = C:\Program Files\MultiPar\par2j64.exe

## fixed parameters for the par2 (or alternative) command
## you could for exemple use Multipar on Windows
#PAR2_ARGS = -s5M -r8% -m1024M --progress stdout -q   (for parpar)
#PAR2_ARGS = c -l -m1024 -r8 -s768000                 (for par2cmdline)
#PAR2_ARGS = create /rr8 /lc40 /lr /rd2               (for Multipar)


## length of the random generated archive's file name
LENGTH_NAME = 22

## length of the random archive's passsword
LENGTH_PASS = 15




##############################################################
##                   servers section                        ##
##############################################################

[server]
host = news.newshosting.com
port = 443
ssl  = true
user = myUser
pass = myPass
connection = 30


## You can add as many server if you have several providers by adding other "server" sections
#[server]
#host = news.otherprovider.com
#port = 563
#ssl  = true
#user = myOtherUser
#pass = myOtherPass
#connection = 15

